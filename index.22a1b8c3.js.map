{"mappings":"AAqCA,SAASA,EAAgBC,GACvB,MAAMC,EAASC,SAASC,cAAc,WAChCC,EAAUF,SAASC,cAAc,aACjCE,EAAYH,SAASC,cAAc,UACnCG,EAAaJ,SAASK,eAAe,eACrCC,EAAYN,SAASK,eAAe,cAE1CN,EAAOQ,MAAMC,QAAU,QACvBN,EAAQK,MAAMC,QAAU,OACxBL,EAAUM,YAAc,GAExBL,EAAWG,MAAMC,QAAU,OAC3BF,EAAUG,YAAc,GAExB,MAAMC,EAAQC,aAAab,GAMrBc,EAAY,C,cALIF,EAAMG,MAAMC,I,UAChBJ,EAAMK,K,iBACCL,EAAMM,Y,iBACNN,EAAMO,aASzBC,EAAc,IAAIC,gBAAgB,CACtCC,UAAWV,EAAMW,KAKnB,OAAOC,MAFQ,8CAA8CJ,IAExC,CACnBK,QAAS,CACP,YAvEU,2EA0EXC,MAAMC,GAAaA,EAASC,SAC5BF,MAAMG,IACL,MAAMC,EAAUD,EAAK,GAKrB,OAHAf,EAAUiB,cAAgBD,EAAQd,IAClCF,EAAUd,QAAU8B,EAAQE,OAAO,GAAGT,GAE/BT,CAAS,IAEjBY,MAAMO,IACL3B,EAAW4B,IAAMD,EAAUF,cAC3BzB,EAAWG,MAAMC,QAAU,QAC3BF,EAAUG,YAAcsB,EAAUE,iBAClClC,EAAOQ,MAAMC,QAAU,OACvBN,EAAQK,MAAMC,QAAU,OAAO,IAEhC0B,OAAOC,IACNC,QAAQC,IAAIF,GACZhC,EAAUM,YAAc,qCACtBV,EAAOQ,MAAMC,QAAU,OACvBJ,EAAWG,MAAMC,QAAU,MAAM,G,EA5FzC,WACE,MAAMT,EAASC,SAASC,cAAc,WAChCqC,EAActC,SAASC,cAAc,iBACrCE,EAAYH,SAASC,cAAc,UAOzC,OALAF,EAAOU,YAAc,2BACAV,EAAdQ,MAAMC,QAAU,QACvB8B,EAAY/B,MAAMC,QAAU,OAC5BL,EAAUM,YAAc,GAEjBa,MAbG,sCAaQ,CAChBC,QAAS,CACP,YAdU,2EAiBXC,MAAMC,GAAaA,EAASC,SAC5BF,MAAMG,IACLA,EAAOA,EAAKY,QAAQ7B,I,IAAU8B,EAAA,OAAoB,OAAT,QAAXA,EAAA9B,EAAMG,aAAK,IAAX2B,OAAA,EAAAA,EAAa1B,IAAW,IACtDH,aAAegB,CAAI,IAEpBH,MAAK,MA8EN,WACF,MAAMiB,EAAgBzC,SAASC,cAAc,iBAE7C,IAAK,IAAIyC,EAAI,EAAGA,EAAI/B,aAAagC,OAAQD,GAAK,EAAG,CAC/C,MAAMhC,EAAQC,aAAa+B,GAC3B,IAAIE,EAAS5C,SAAS6C,cAAc,UAEpCD,EAAOE,MAAQJ,EACfE,EAAOG,UAAY,GAAGrC,EAAMK,OAC5B0B,EAAcO,YAAYJ,E,EAtFxBK,GACAlD,EAAOQ,MAAMC,QAAU,OACvB8B,EAAY/B,MAAMC,QAAU,OAAO,IAEpC0B,OAAOC,IACNC,QAAQC,IAAIF,GACZhC,EAAUM,YAAc,+BACAV,EAAjBQ,MAAMC,QAAU,MAAM,G,EC3BnC,GACG0B,OAAOC,IACNC,QAAQC,IAAIF,GACZnC,SAASC,cAAc,UAAUQ,YAAc,aAAa,IAGhET,SAASC,cAAc,iBAAiBiD,iBAAiB,UAAWC,IAElEtD,EADgBsD,EAAMC,OAAON,MACL","sources":["src/js/cat-api.js","src/index.js"],"sourcesContent":["const url = 'https://api.thecatapi.com/v1/breeds';\nconst api_key = 'live_VZ1SLbLWDxhfqJdDTkoccHIln3ksGsRzopmCmcFYOh2oF7OuabnBdzspIN63yDCR';\n\nfunction fetchBreeds() {\n  const loader = document.querySelector('.loader');\n  const breedSelect = document.querySelector('.breed-select');\n  const errorText = document.querySelector('.error');\n\n  loader.textContent = 'Грузим, грузим загружаем';\n  loader.style.display = 'block';\n  breedSelect.style.display = 'none';\n  errorText.textContent = '';\n\n  return fetch(url, {\n    headers: {\n      'x-api-key': api_key,\n    },\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      data = data.filter((breed) => breed.image?.url != null);\n      storedBreeds = data;\n    })\n    .then(() => {\n      populateBreedsSelect();\n      loader.style.display = 'none';\n      breedSelect.style.display = 'block';\n    })\n    .catch((error) => {\n      console.log(error);\n      errorText.textContent = 'Ошибка загрузки пород кошек!';\n      loader.style.display = 'none';\n    });\n}\n\nexport { fetchBreeds };\n    \nfunction fetchCatByBreed(breedId) {\n  const loader = document.querySelector('.loader');\n  const catInfo = document.querySelector('.cat-info');\n  const errorText = document.querySelector('.error');\n  const breedImage = document.getElementById('breed_image');\n  const breedDesc = document.getElementById('breed_json');\n\n  loader.style.display = 'block';\n  catInfo.style.display = 'none';\n  errorText.textContent = '';\n\n  breedImage.style.display = 'none';\n  breedDesc.textContent = '';\n\n  const breed = storedBreeds[breedId];\n  const breedImageURL = breed.image.url;\n  const breedName = breed.name;\n  const breedDescription = breed.description;\n  const breedTemperament = breed.temperament;\n\n  const breedInfo = {\n    breedImageURL,\n    breedName,\n    breedDescription,\n    breedTemperament,\n  };\n\n  const queryParams = new URLSearchParams({\n    breed_ids: breed.id,\n  });\n\n  const apiUrl = `https://api.thecatapi.com/v1/images/search?${queryParams}`;\n\n  return fetch(apiUrl, {\n    headers: {\n      'x-api-key': api_key,\n    },\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      const catData = data[0];\n\n      breedInfo.breedImageURL = catData.url;\n      breedInfo.breedId = catData.breeds[0].id;\n\n      return breedInfo;\n    })\n    .then((breedInfo) => {\n      breedImage.src = breedInfo.breedImageURL;\n      breedImage.style.display = 'block';\n      breedDesc.textContent = breedInfo.breedDescription;\n      loader.style.display = 'none';\n      catInfo.style.display = 'block';\n    })\n    .catch((error) => {\n      console.log(error);\n      errorText.textContent = 'Ошибка загрузки информации о коте!';\n        loader.style.display = 'none';\n        breedImage.style.display = 'none';\n    });\n}\n\nexport { fetchCatByBreed };\n    \n    function populateBreedsSelect() {\n  const breedSelector = document.querySelector('.breed-select');\n\n  for (let i = 0; i < storedBreeds.length; i += 1) {\n    const breed = storedBreeds[i];\n    let option = document.createElement('option');\n\n    option.value = i;\n    option.innerHTML = `${breed.name}`;\n    breedSelector.appendChild(option);\n  }\n    }\n\n    function updateCatInfo(breedInfo) {\n  const breedImage = document.getElementById('breed_image');\n  const breedDescription = document.getElementById('breed_json');\n\n\n  breedImage.src = breedInfo.breedImage;\n  breedDescription.textContent = breedInfo.breedDescription;\n};\n\n    export { updateCatInfo };\n\n","\n\nimport { fetchBreeds, fetchCatByBreed } from './js/cat-api.js';\n\nfetchBreeds()\n  .catch((error) => {\n    console.log(error);\n    document.querySelector('.error').textContent = 'нема котика';\n  });\n\ndocument.querySelector('.breed-select').addEventListener('change', (event) => {\n  const breedId = event.target.value;\n  fetchCatByBreed(breedId);\n});\n"],"names":["$c4ebbd28ee7007ee$export$57b7d3a597416aa2","breedId","loader","document","querySelector","catInfo","errorText","breedImage","getElementById","breedDesc","style","display","textContent","breed","storedBreeds","breedInfo1","image","url","name","description","temperament","queryParams","URLSearchParams","breed_ids","id","fetch","headers","then","response","json","data","catData","breedImageURL","breeds","breedInfo","src","breedDescription","catch","error","console","log","breedSelect","filter","ref","breedSelector","i","length","option","createElement","value","innerHTML","appendChild","$c4ebbd28ee7007ee$var$populateBreedsSelect","addEventListener","event","target"],"version":3,"file":"index.22a1b8c3.js.map"}